/**
 * @fileoverview Auto-generated test configuration for Wsdot Travel Times API
 *
 * This file is automatically generated from discovered Endpoint objects.
 * Do not edit manually - changes will be overwritten.
 */

import type { Endpoint } from "@/shared/endpoints";
import { fetchWithZod } from "@/shared/fetching";
import type { EndpointTestConfig } from "../generators/configGenerator";

// Import the actual endpoint definitions
import * as wsdot_travel_times from "@/clients/wsdot-travel-times";

/**
 * Auto-generated test configuration for getTravelTime endpoint
 */
export const getTravelTimeConfig: EndpointTestConfig<any, any> = {
  apiFunction: (params: any) => fetchWithZod(wsdot_travel_times.getTravelTime, params),
  inputSchema: wsdot_travel_times.getTravelTime.inputSchema,
  outputSchema: wsdot_travel_times.getTravelTime.outputSchema,
  validParams: wsdot_travel_times.getTravelTime.sampleParams || {},
  invalidParams: [
    {},
    { invalidField: "invalidValue" },
  ],
  endpointName: "getTravelTime",
  category: "data-retrieval",
  maxResponseTime: 120000,
  customTests: [
    {
      name: "Cache Strategy Validation",
      params: wsdot_travel_times.getTravelTime.sampleParams || {},
      expectation: "success",
      description: "Validates that DAILY_STATIC caching works correctly",
    },
    {
      name: "Sample Parameters Test",
      params: wsdot_travel_times.getTravelTime.sampleParams || {},
      expectation: "success",
      description: "Tests with the provided sample parameters",
    },
  ],
  endpointDefinition: wsdot_travel_times.getTravelTime,
};

/**
 * Auto-generated test configuration for getTravelTimes endpoint
 */
export const getTravelTimesConfig: EndpointTestConfig<any, any> = {
  apiFunction: (params: any) => fetchWithZod(wsdot_travel_times.getTravelTimes, params),
  inputSchema: wsdot_travel_times.getTravelTimes.inputSchema,
  outputSchema: wsdot_travel_times.getTravelTimes.outputSchema,
  validParams: wsdot_travel_times.getTravelTimes.sampleParams || {},
  invalidParams: [
    {},
    { invalidField: "invalidValue" },
  ],
  endpointName: "getTravelTimes",
  category: "data-retrieval",
  maxResponseTime: 120000,
  customTests: [
    {
      name: "Cache Strategy Validation",
      params: wsdot_travel_times.getTravelTimes.sampleParams || {},
      expectation: "success",
      description: "Validates that DAILY_STATIC caching works correctly",
    },
    {
      name: "Sample Parameters Test",
      params: wsdot_travel_times.getTravelTimes.sampleParams || {},
      expectation: "success",
      description: "Tests with the provided sample parameters",
    },
  ],
  endpointDefinition: wsdot_travel_times.getTravelTimes,
};

/**
 * All endpoint configurations for this API
 */
export const wsdot_travel_timesConfigs = [
  getTravelTimeConfig,
  getTravelTimesConfig,
];

/**
 * API module configuration
 */
export const wsdot_travel_timesModuleConfig = {
  moduleName: "Wsdot Travel Times",
  endpoints: wsdot_travel_timesConfigs,
  settings: {
    baseTimeout: 30000,
    requiresAuth: false,
    rateLimit: {
      requestsPerSecond: 10,
      burstLimit: 50,
    },
    testCategories: ["data-retrieval","validation","performance"],
  },
};
