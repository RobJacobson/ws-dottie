/**
 * @fileoverview Auto-generated test configuration for Wsdot Weather Information Extended API
 *
 * This file is automatically generated from discovered Endpoint objects.
 * Do not edit manually - changes will be overwritten.
 */

import type { Endpoint } from "@/shared/endpoints";
import { fetchWithZod } from "@/shared/fetching";
import type { EndpointTestConfig } from "../generators/configGenerator";
import { z } from "zod";

// Import the actual endpoint definitions
import * as wsdot_weather_information_extended from "@/clients/wsdot-weather-information-extended";

/**
 * Auto-generated test configuration for getWeatherInformationExtended endpoint
 */
export const getWeatherInformationExtendedConfig: EndpointTestConfig<z.infer<typeof wsdot_weather_information_extended.getWeatherInformationExtended.inputSchema>, z.infer<typeof wsdot_weather_information_extended.getWeatherInformationExtended.outputSchema>> = {
  apiFunction: (params: z.infer<typeof wsdot_weather_information_extended.getWeatherInformationExtended.inputSchema>) => fetchWithZod(wsdot_weather_information_extended.getWeatherInformationExtended, params),
  inputSchema: wsdot_weather_information_extended.getWeatherInformationExtended.inputSchema,
  outputSchema: wsdot_weather_information_extended.getWeatherInformationExtended.outputSchema,
  validParams: wsdot_weather_information_extended.getWeatherInformationExtended.sampleParams || {},
  invalidParams: [
    {},
    { invalidField: "invalidValue" },
  ],
  endpointName: "getWeatherInformationExtended",
  category: "data-retrieval",
  maxResponseTime: 30000,
  customTests: [
    {
      name: "Cache Strategy Validation",
      params: wsdot_weather_information_extended.getWeatherInformationExtended.sampleParams || {},
      expectation: "success",
      description: "Validates that HOURLY_UPDATES caching works correctly",
    },
    {
      name: "Sample Parameters Test",
      params: wsdot_weather_information_extended.getWeatherInformationExtended.sampleParams || {},
      expectation: "success",
      description: "Tests with the provided sample parameters",
    },
  ],
  endpointDefinition: wsdot_weather_information_extended.getWeatherInformationExtended,
};

/**
 * All endpoint configurations for this API
 */
export const wsdot_weather_information_extendedConfigs = [
  getWeatherInformationExtendedConfig,
];

/**
 * API module configuration
 */
export const wsdot_weather_information_extendedModuleConfig = {
  moduleName: "Wsdot Weather Information Extended",
  endpoints: wsdot_weather_information_extendedConfigs,
  settings: {
    baseTimeout: 30000,
    requiresAuth: false,
    rateLimit: {
      requestsPerSecond: 10,
      burstLimit: 50,
    },
    testCategories: ["data-retrieval","validation","performance"],
  },
};
